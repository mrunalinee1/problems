class Solution {
public:
    int numSubarrayProductLessThanK(vector<int>& nums, int k) {
       

        int n = nums.size();
        if (k <= 1) return 0; // No valid subarrays possible
        
        int count = 0;
        int prod = 1;
        int left = 0;
        
        for (int right = 0; right < n; right++) {
            prod *= nums[right];
            
            while (prod >= k) {
                prod /= nums[left];
                left++;
            }
            
            // At this point, all subarrays starting from 'left' to 'right' are valid
            count += right - left + 1;
        }
        
        return count;
   

    }
};
