You are given two strings of the same length s and t. In one step you can choose any character of t and replace it with another character.

Return the minimum number of steps to make t an anagram of s.

An Anagram of a string is a string that contains the same characters with a different (or the same) ordering.

 

Example 1:

Input: s = "bab", t = "aba"
Output: 1
Explanation: Replace the first 'a' in t with b, t = "bba" which is anagram of s.

class Solution {
public:
    int minSteps(string s, string t) {
        int count[26] = {0};
        int i = 0;
        while (i < s.size())
         {
            count[t[i] - 'a']++;
            count[s[i] - 'a']--;
            i++;
        }
        int ans = 0;
        i = 0;
        while (i < 26) {
            ans += max(0, count[i]);
            i++;
        } return ans;
        
    }
};
