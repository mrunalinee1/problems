#include <iostream>
using namespace std;

// Node is defined as:
struct Node{
  int data;
  Node* next;
  Node(int data){
      this->data = data;
      this->next = nullptr;
  }
};

int solve(Node* head) {
    int criticalPoints = 0;
    Node* prev = head;
    Node* curr = head->next;
    while (curr != nullptr && curr->next != nullptr) {
        if (curr->data < prev->data && curr->data < curr->next->data) {
            criticalPoints++;
        } else if (curr->data > prev->data && curr->data > curr->next->data) {
            criticalPoints++;
        }
        prev = curr;
        curr = curr->next;
    }
    return criticalPoints;
}

int main() {
    // Create the linked list
    Node* head = new Node(1);
    head->next = new Node(2);
    head->next->next = new Node(3);
    head->next->next->next = new Node(4);
    head->next->next->next->next = new Node(5);
    head->next->next->next->next->next = new Node(6);

    // Call the solve function
    int ans = solve(head);
    cout << "Number of critical points: " << ans << endl;

    // Free memory
    while (head != nullptr) {
        Node* temp = head;
        head = head->next;
        delete temp;
    }

    return 0;
}
