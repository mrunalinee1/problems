The tail recursion is also a liner recursion like head recursion but the position of the recursive call is at the end of the function.
Due to this, the tail recursion can be optimized to minimize the stack memory usage. This process is called Tail Call Optimization.

In the first example, the nSum() does the tail recursion.
// C program to find the factorail using tail recursion
#include <stdio.h>

int factorialTail(int n)
{
    // Base case
    if (n == 1 || n == 0) {
        return 1;
    }
    else {
        // Tail recursive call
        return n * factorialTail(n - 1);
    }
}

int main()
{

    int n = 5;

    int fact1 = factorialTail(n);
    printf("Resursive Factorial of %d: %d \n", n, fact1);

    return 0;
}
